 	第五讲  运算符和表达式		 
			
 
 引  言

 一、教学目的
 本讲主要介绍了C语言的算术运算符、关系运算符、逻辑运算符、赋值运算符、自增和自减运算符、逗号运算符以及条件运算符的功能、结合性和优先级。要求大家掌握含有这些运算符的表达式值的判定，并且在编程中熟练运用这些运算符解决问题。

 二、知识要点
 1.算术运算符和算术表达式
 （1）算术运算符使用注意事项
 （2）算术运算符的结合性和优先级
 2.关系运算符和关系表达式
 （1）关系运算符的优先级
 （2）关系表达式值的判定
 3.逻辑运算符和逻辑表达式
 （1）逻辑运算符的使用
 （2）逻辑运算符的优先级
 （3）逻辑表达式值的判定
 4.赋值运算符和赋值表达式
 （1）赋值运算的结合性和优先级
 （2）复合赋值运算的使用
 5.自增运算符和自减运算符
 （1）自增运算符和自减运算符的作用
 （2）自增运算和自减运算的前置方式和后置方式的区别
 6.逗号运算符和逗号表达式
 （1）逗号运算符的作用
 （2）逗号表达式的值
 7.条件运算符和条件表达式
 （1）条件运算符的使用

 三、边用边学

 §5.1  算术运算符和算术表达式

 一、算术运算符
 C语言提供的算术运算符及功能如下：
 +：加法运算符。如1+2的结果为3。
 -：减法运算符，或负值运算符。如5-3、-2的结果分别为2和-2。
 *：乘法运算符。如2*3的结果为6。
 /：除法运算符。如4/2的结果为2。
 % ：模运算符，或称取余运算符，要求%两侧均为整型数据。如8%3的结果为2。
 计算时需要注意的是：一是运算的数据都是整型数据时，结果为整型，如果有实数，则结果为double型。二是模运算符要求运算符两侧必须为整型数据，如果不是整型数据可以采用强制类型转换。
 二、算术表达式
 用算术运算符将数据对象连接起来的式子，称为算术表达式。表达式的运算按照运算符的结合性和优先级来进行。
 C规定了运算符的结合方向，即结合性。算术运算符的结合性是从左往右算。
 C语言规定负值运算符优先级高于乘、除、模运算符，乘、除、模运算符优先级高于加、减运算符，当表达式中优先级相同时，按照运算符的结合性。如果需要先计算优先级低的可以使用小括号“（）”，小括号的优先级最高。

 §5.2  关系运算符和关系表达式

 一、关系运算符
 C语言提供的以下关系运算符：
 < ：小于运算符。如a<4。
 <= ：小于等于运算符。如3<=5。
 >：大于运算符。如x>y。
 >= ：大于等于运算符。如x>=0。
 == ：等于运算符。如a= =b。
 != ：不等于运算符。如y!=1。
 两个数据在进行值的比较时，其结果不是成立就是不成立，其中成立为“真”，不成立为“假”。在C语言中，任何非0值为“真”，0值为“假”。关系运算的结果仅产生两个值：1表示“真”，0表示“假”。
 二、关系运算符结合性与优先级
 关系运算符的结合性为“从左往右”。
 关系运算符中<、<=、>、>=的优先级相等，= =、!=优先级相等，且前者高于后者。
 关系运算符的级别小于算术运算符。
 三、关系表达式
 用关系运算符将两个数据或表达式连接起来的式子，称为关系表达式。关系表达式的值为1或0。

 §5.3  逻辑运算符和逻辑表达式

 一、逻辑运算符
 逻辑运算表示两个数据或表达式之间的逻辑关系。C语言提供的逻辑运算符有三种：逻辑与运算符“&&”、逻辑或运算符“||”、逻辑非运算符“!”。
 逻辑运算的结果也只有两个：“真”为1和“假”为0。

 二、逻辑运算符结合性与优先级
 逻辑运算符“！”的结合性为“从右往左”、“&&”和“||”的结合性为“从左往右”。
 逻辑运算符的优先级为“!”高于“&&”高于“||”。例如表达式! （3<4） ||（2>5）&&（4>1），则!的运算结果为假、&&的运算结果为假，最终||的结果为假，即该表达式的值为0。
 “！”的优先级高于算术运算符，“&&”和“||”的优先级低于关系运算符。见下图5.1。
         

 三、逻辑表达式
 逻辑表达式的值为1或0。由于C语言编译系统在判断一个量为“真”、“假”时，以0为“假”，以非0为“真”。所以逻辑运算符也可以直接连接数据，如!4的结果为0、3&&0的结果为0。

 §5.4  赋值运算符和赋值表达式

 一、简单赋值运算
 C语言中最常见的赋值运算符是“=”，其作用是将赋值运算符右边的表达式赋予左边的变量，形如：变量=表达式，称为赋值表达式。例如：x=4。
 赋值运算符的结合性为从右往左，其优先级低于算术运算符、关系运算符和逻辑运算符。

 二、复合赋值运算
 算术运算符“+ — * /%”和赋值运算符“=”结合起来，形成复合赋值运算符。如下所示：
 +=：加赋值运算符。如a+=3+1，等价于 a=a+（3+1）。
 -= ：减赋值运算符。如a-=3+1，等价于 a=a-（3+1）。
 *=：乘赋值运算符。如a*=3+1，等价于 a=a*（3+1）。
 /=：除赋值运算符。如a/=3+1，等价于 a=a/（3+1）。
 %= ：取余赋值运算符。如a%=3+1，等价于 a=a%（3+1）。
 复合赋值运算符的作用是先将复合运算符右边表达式的结果与左边的变量进行算术运算，然后再将最终结果赋予左边的变量。所以复合运算要注意：一是复合运算符左边必须是变量；二是复合运算符右边的表达式计算完成后才参与复合赋值运算。
 复合赋值运算符的结合性和优先级等同于简单的赋值运算符“=”。
 复合运算符常用于某个变量自身的变化，尤其当左边的变量名很长时，使用复合运算符书写更方便。

 §5.5  自增运算符和自减运算符

 自增和自减运算符是C语言所特有的，主要用于给一个变量加1或减1。自增和自减运算符及其功能如下：
 ++：自增运算符。如a++，++a，都等价于a=a+1。
 --：自减运算符。如a--，--a，都等价于a=a-1。
 自增和自减运算符是单目运算符。自增运算符和自减运算符可以放到变量前面（前置方式）或者后面（后置方式），这两种方式同样实现了变量的自增或自减运算。但是当变量的自增运算或者自减运算同其它运算配合构成一个表达式时，前置运算时变量先做自增或自减运算，再将变化后的变量值参加表达式中的其它运算。后置运算时变量在参加表达式中的其它运算之后，再做自增或自减运算。

 §5.6  逗号运算符和逗号表达式

 逗号运算符主要用于连接表达式。例如：
 a=a+1,b=3*4
 用逗号运算符连接起来的表达式称为逗号表达式。它的一般形式为：
 表达式1，表达式2，… …，表达式n
 逗号表达式的运算过程是：先算表达式1，再算表达式2，依次算到表达式n。
 整个逗号表达式的值是最后一个表达式的值。逗号表达式的结合性从左往右，它的优先级是最低的。

 §5.7  条件运算符和条件表达式

 条件运算符是C语言的唯一的三目运算符，即它需要3个数据或表达式构成条件表达式。它的一般形式为：
 表达式1？表达式2：表达式3
 如果表达式1成立，则表达式2的值是整个表达式的值，否则表达式3的值是整个表达式的值。如图5.2所示：
         
 if-else结构可以替换条件运算符，但是条件运算符不能替换所有的if-else结构。只有当if-else结构为两个分支情况，并且都给同一个变量赋值时才可以用条件运算符替换。
 条件运算符的结合方向为从右往左。
 条件运算符的优先级仅高于赋值运算符和逗号运算符，低于关系、算术运算符和逻辑运算符。
 上面我们介绍了C语言的常用运算符，其优先级从高到低总结如下：
        
 课后作业与上机练习
 1.试编程求出最小的正整数n，使得n满足除3余2、除5余3、除7余4。
 2.编写一个程序，可以将例5.12生成的密电码译回原文。
 3.输入两个正整数m和n，求出它们的最小公倍数。
 算法：最小公倍数等于m*n再除以它们的最大公约数。
 4.参照例5.11编写一个程序，要求计算出生日到计算日的总天数。
 算法：
 1）输入出生年year1、月month1、日date1和计算日年year2、月month2、日date2。
 2）统计year1到year2-1的总天数：
 for （n=year1,days=0;n<year2;n++）
   if （n是闰年） days+=366
   else days+=365;
 3）计算出出生日和计算日是当年的第days1和days2。同例5.11。
 4）总天数等于days+days2-days1
 5.根据上题结果，判断体力、情绪和智力状态。方法如下：
 体力状态：用总天数除以23，余数在0～11为体力高潮期，否则为体力低潮期。
 情绪状态：用总天数除以28，余数在0～14为情绪高潮期，否则为情绪低潮期。
 智力状态：用总天数除以33，余数在0～16为智力高潮期，否则为智力低潮期。
